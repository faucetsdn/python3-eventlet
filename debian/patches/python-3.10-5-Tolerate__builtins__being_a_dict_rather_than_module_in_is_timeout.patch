Description: Tolerate __builtins__ being a dict (rather than module) in is_timeout
 I'm still not sure how this happens, but somehow it does in
 socket_test.test_error_is_timeout. As a result, is_timeout wouldn't get
 a reference to TimeoutError, so the socket error would not be correctly
 identified as a timeout.
Author: Tim Burke <tim.burke@gmail.com>
Date: Fri, 11 Jun 2021 13:12:36 -0700
Origin: https://github.com/eventlet/eventlet/pull/715/commits/bad82b6d5634d8cdfa77a2f828abdf61e859a3f4
Last-Update: 2021-11-12

diff --git a/eventlet/timeout.py b/eventlet/timeout.py
index 6e1e08f63..4ab893eef 100644
--- a/eventlet/timeout.py
+++ b/eventlet/timeout.py
@@ -174,6 +174,11 @@ def fun(*args, **kwargs):
     return fun
 
 
+if isinstance(__builtins__, dict):  # seen when running tests on py310, but HOW??
+    _timeout_err = __builtins__.get('TimeoutError', Timeout)
+else:
+    _timeout_err = getattr(__builtins__, 'TimeoutError', Timeout)
+
+
 def is_timeout(obj):
-    py3err = getattr(__builtins__, 'TimeoutError', Timeout)
-    return bool(getattr(obj, 'is_timeout', False)) or isinstance(obj, py3err)
+    return bool(getattr(obj, 'is_timeout', False)) or isinstance(obj, _timeout_err)
