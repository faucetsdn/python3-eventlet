Description: Replace dnspython "_compute_expiration" by "_compute_times".
 In dnspython v2.0.0, "_compute_expiration" was replaced by
 "_compute_times". Once the minimum version of dnspython is
 v2.0.0, we can remove this wrapping method.
Author: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>
Date: Mon, 20 Jul 2020 17:21:30 +0000
Closes-Bug: #1888258
Fixes: #629
Origin: https://github.com/eventlet/eventlet/commit/51569f347671ab1ca9b5d585a1a17dc12e7e22c9

diff --git a/eventlet/support/greendns.py b/eventlet/support/greendns.py
index 10dd04b68..b95790c3e 100644
--- a/eventlet/support/greendns.py
+++ b/eventlet/support/greendns.py
@@ -120,6 +120,15 @@ def is_ip_addr(host):
     return is_ipv4_addr(host) or is_ipv6_addr(host)
 
 
+def compute_expiration(query, timeout):
+    # NOTE(ralonsoh): in dnspython v2.0.0, "_compute_expiration" was replaced
+    # by "_compute_times".
+    if hasattr(query, '_compute_expiration'):
+        return query._compute_expiration(timeout)
+    else:
+        return query._compute_times(timeout)[1]
+
+
 class HostsAnswer(dns.resolver.Answer):
     """Answer class for HostsResolver object"""
 
@@ -711,7 +720,7 @@ def udp(q, where, timeout=DNS_QUERY_TIMEOUT, port=53,
     s = socket.socket(af, socket.SOCK_DGRAM)
     s.settimeout(timeout)
     try:
-        expiration = dns.query._compute_expiration(timeout)
+        expiration = compute_expiration(dns.query, timeout)
         if source is not None:
             s.bind(source)
         while True:
@@ -804,7 +813,7 @@ def tcp(q, where, timeout=DNS_QUERY_TIMEOUT, port=53,
     s = socket.socket(af, socket.SOCK_STREAM)
     s.settimeout(timeout)
     try:
-        expiration = dns.query._compute_expiration(timeout)
+        expiration = compute_expiration(dns.query, timeout)
         if source is not None:
             s.bind(source)
         while True:
